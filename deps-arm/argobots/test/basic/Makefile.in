# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# -*- Mode: Makefile; -*-
#
# See COPYRIGHT in top-level directory.
#

# -*- Mode: Makefile; -*-
#
# See COPYRIGHT in top-level directory.
#

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
TESTS = init_finalize$(EXEEXT) xstream_create$(EXEEXT) \
	xstream_revive$(EXEEXT) xstream_affinity$(EXEEXT) \
	xstream_barrier$(EXEEXT) xstream_rank$(EXEEXT) \
	xstream_set_main_sched$(EXEEXT) thread_create$(EXEEXT) \
	thread_create2$(EXEEXT) thread_create_on_xstream$(EXEEXT) \
	thread_revive$(EXEEXT) thread_attr$(EXEEXT) \
	thread_attr2$(EXEEXT) thread_yield$(EXEEXT) \
	thread_yield2$(EXEEXT) thread_yield_to$(EXEEXT) \
	thread_exit$(EXEEXT) thread_self_suspend_resume$(EXEEXT) \
	thread_get_last_xstream$(EXEEXT) thread_get_func_arg$(EXEEXT) \
	thread_migrate$(EXEEXT) thread_data$(EXEEXT) \
	thread_data2$(EXEEXT) thread_id$(EXEEXT) task_create$(EXEEXT) \
	task_create_on_xstream$(EXEEXT) task_revive$(EXEEXT) \
	task_data$(EXEEXT) task_data2$(EXEEXT) thread_task$(EXEEXT) \
	thread_task_arg$(EXEEXT) thread_task_num$(EXEEXT) \
	sched_basic$(EXEEXT) sched_basic_wait$(EXEEXT) \
	sched_on_thread$(EXEEXT) sched_prio$(EXEEXT) \
	sched_randws$(EXEEXT) sched_set_main$(EXEEXT) \
	sched_stack$(EXEEXT) sched_config$(EXEEXT) \
	sched_user_ws$(EXEEXT) pool_custom$(EXEEXT) \
	sync_no_contention$(EXEEXT) main_sched$(EXEEXT) mutex$(EXEEXT) \
	mutex_prio$(EXEEXT) mutex_recursive$(EXEEXT) \
	mutex_spinlock$(EXEEXT) mutex_static$(EXEEXT) \
	mutex_unlock_se$(EXEEXT) cond_test$(EXEEXT) cond_join$(EXEEXT) \
	cond_signal_in_main$(EXEEXT) cond_static$(EXEEXT) \
	cond_timedwait$(EXEEXT) rwlock_writer_excl$(EXEEXT) \
	rwlock_reader_writer_excl$(EXEEXT) rwlock_reader_incl$(EXEEXT) \
	future_create$(EXEEXT) eventual_create$(EXEEXT) \
	eventual_test$(EXEEXT) barrier$(EXEEXT) self_rank_id$(EXEEXT) \
	self_type$(EXEEXT) ext_thread$(EXEEXT) ext_thread2$(EXEEXT) \
	ext_thread_barrier$(EXEEXT) ext_thread_cond$(EXEEXT) \
	ext_thread_eventual$(EXEEXT) ext_thread_future$(EXEEXT) \
	ext_thread_join$(EXEEXT) ext_thread_mutex$(EXEEXT) \
	ext_thread_rwlock$(EXEEXT) timer$(EXEEXT) info_print$(EXEEXT) \
	info_print_stack$(EXEEXT) info_stackdump$(EXEEXT) \
	info_stackdump2$(EXEEXT) unit$(EXEEXT) error$(EXEEXT)
XFAIL_TESTS = $(am__EXEEXT_2) $(am__EXEEXT_3)
@ABT_CONFIG_DISABLE_EXT_THREAD_TRUE@am__append_1 = self_type ext_thread ext_thread2 ext_thread_barrier \
@ABT_CONFIG_DISABLE_EXT_THREAD_TRUE@               ext_thread_cond ext_thread_eventual ext_thread_future \
@ABT_CONFIG_DISABLE_EXT_THREAD_TRUE@               ext_thread_join ext_thread_mutex ext_thread_rwlock

@ABT_CONFIG_DISABLE_ERROR_CHECK_TRUE@am__append_2 = self_type
check_PROGRAMS = $(am__EXEEXT_1)
noinst_PROGRAMS = $(am__EXEEXT_1)
subdir = test/basic
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/aclocal_cc.m4 \
	$(top_srcdir)/m4/aclocal_check_visibility.m4 \
	$(top_srcdir)/m4/aclocal_runlog.m4 \
	$(top_srcdir)/m4/aclocal_util.m4 \
	$(top_srcdir)/m4/ax_gcc_builtin.m4 \
	$(top_srcdir)/m4/ax_gcc_func_attribute.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/maint/version.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/include/abt_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = init_finalize$(EXEEXT) xstream_create$(EXEEXT) \
	xstream_revive$(EXEEXT) xstream_affinity$(EXEEXT) \
	xstream_barrier$(EXEEXT) xstream_rank$(EXEEXT) \
	xstream_set_main_sched$(EXEEXT) thread_create$(EXEEXT) \
	thread_create2$(EXEEXT) thread_create_on_xstream$(EXEEXT) \
	thread_revive$(EXEEXT) thread_attr$(EXEEXT) \
	thread_attr2$(EXEEXT) thread_yield$(EXEEXT) \
	thread_yield2$(EXEEXT) thread_yield_to$(EXEEXT) \
	thread_exit$(EXEEXT) thread_self_suspend_resume$(EXEEXT) \
	thread_get_last_xstream$(EXEEXT) thread_get_func_arg$(EXEEXT) \
	thread_migrate$(EXEEXT) thread_data$(EXEEXT) \
	thread_data2$(EXEEXT) thread_id$(EXEEXT) task_create$(EXEEXT) \
	task_create_on_xstream$(EXEEXT) task_revive$(EXEEXT) \
	task_data$(EXEEXT) task_data2$(EXEEXT) thread_task$(EXEEXT) \
	thread_task_arg$(EXEEXT) thread_task_num$(EXEEXT) \
	sched_basic$(EXEEXT) sched_basic_wait$(EXEEXT) \
	sched_on_thread$(EXEEXT) sched_prio$(EXEEXT) \
	sched_randws$(EXEEXT) sched_set_main$(EXEEXT) \
	sched_stack$(EXEEXT) sched_config$(EXEEXT) \
	sched_user_ws$(EXEEXT) pool_custom$(EXEEXT) \
	sync_no_contention$(EXEEXT) main_sched$(EXEEXT) mutex$(EXEEXT) \
	mutex_prio$(EXEEXT) mutex_recursive$(EXEEXT) \
	mutex_spinlock$(EXEEXT) mutex_static$(EXEEXT) \
	mutex_unlock_se$(EXEEXT) cond_test$(EXEEXT) cond_join$(EXEEXT) \
	cond_signal_in_main$(EXEEXT) cond_static$(EXEEXT) \
	cond_timedwait$(EXEEXT) rwlock_writer_excl$(EXEEXT) \
	rwlock_reader_writer_excl$(EXEEXT) rwlock_reader_incl$(EXEEXT) \
	future_create$(EXEEXT) eventual_create$(EXEEXT) \
	eventual_test$(EXEEXT) barrier$(EXEEXT) self_rank_id$(EXEEXT) \
	self_type$(EXEEXT) ext_thread$(EXEEXT) ext_thread2$(EXEEXT) \
	ext_thread_barrier$(EXEEXT) ext_thread_cond$(EXEEXT) \
	ext_thread_eventual$(EXEEXT) ext_thread_future$(EXEEXT) \
	ext_thread_join$(EXEEXT) ext_thread_mutex$(EXEEXT) \
	ext_thread_rwlock$(EXEEXT) timer$(EXEEXT) info_print$(EXEEXT) \
	info_print_stack$(EXEEXT) info_stackdump$(EXEEXT) \
	info_stackdump2$(EXEEXT) unit$(EXEEXT) error$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_barrier_OBJECTS = barrier.$(OBJEXT)
barrier_OBJECTS = $(am_barrier_OBJECTS)
barrier_LDADD = $(LDADD)
barrier_DEPENDENCIES = $(libutil) $(libabt)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_cond_join_OBJECTS = cond_join.$(OBJEXT)
cond_join_OBJECTS = $(am_cond_join_OBJECTS)
cond_join_LDADD = $(LDADD)
cond_join_DEPENDENCIES = $(libutil) $(libabt)
am_cond_signal_in_main_OBJECTS = cond_signal_in_main.$(OBJEXT)
cond_signal_in_main_OBJECTS = $(am_cond_signal_in_main_OBJECTS)
cond_signal_in_main_LDADD = $(LDADD)
cond_signal_in_main_DEPENDENCIES = $(libutil) $(libabt)
am_cond_static_OBJECTS = cond_static.$(OBJEXT)
cond_static_OBJECTS = $(am_cond_static_OBJECTS)
cond_static_LDADD = $(LDADD)
cond_static_DEPENDENCIES = $(libutil) $(libabt)
am_cond_test_OBJECTS = cond_test.$(OBJEXT)
cond_test_OBJECTS = $(am_cond_test_OBJECTS)
cond_test_LDADD = $(LDADD)
cond_test_DEPENDENCIES = $(libutil) $(libabt)
am_cond_timedwait_OBJECTS = cond_timedwait.$(OBJEXT)
cond_timedwait_OBJECTS = $(am_cond_timedwait_OBJECTS)
cond_timedwait_LDADD = $(LDADD)
cond_timedwait_DEPENDENCIES = $(libutil) $(libabt)
am_error_OBJECTS = error.$(OBJEXT)
error_OBJECTS = $(am_error_OBJECTS)
error_LDADD = $(LDADD)
error_DEPENDENCIES = $(libutil) $(libabt)
am_eventual_create_OBJECTS = eventual_create.$(OBJEXT)
eventual_create_OBJECTS = $(am_eventual_create_OBJECTS)
eventual_create_LDADD = $(LDADD)
eventual_create_DEPENDENCIES = $(libutil) $(libabt)
am_eventual_test_OBJECTS = eventual_test.$(OBJEXT)
eventual_test_OBJECTS = $(am_eventual_test_OBJECTS)
eventual_test_LDADD = $(LDADD)
eventual_test_DEPENDENCIES = $(libutil) $(libabt)
am_ext_thread_OBJECTS = ext_thread.$(OBJEXT)
ext_thread_OBJECTS = $(am_ext_thread_OBJECTS)
ext_thread_LDADD = $(LDADD)
ext_thread_DEPENDENCIES = $(libutil) $(libabt)
am_ext_thread2_OBJECTS = ext_thread2.$(OBJEXT)
ext_thread2_OBJECTS = $(am_ext_thread2_OBJECTS)
ext_thread2_LDADD = $(LDADD)
ext_thread2_DEPENDENCIES = $(libutil) $(libabt)
am_ext_thread_barrier_OBJECTS = ext_thread_barrier.$(OBJEXT)
ext_thread_barrier_OBJECTS = $(am_ext_thread_barrier_OBJECTS)
ext_thread_barrier_LDADD = $(LDADD)
ext_thread_barrier_DEPENDENCIES = $(libutil) $(libabt)
am_ext_thread_cond_OBJECTS = ext_thread_cond.$(OBJEXT)
ext_thread_cond_OBJECTS = $(am_ext_thread_cond_OBJECTS)
ext_thread_cond_LDADD = $(LDADD)
ext_thread_cond_DEPENDENCIES = $(libutil) $(libabt)
am_ext_thread_eventual_OBJECTS = ext_thread_eventual.$(OBJEXT)
ext_thread_eventual_OBJECTS = $(am_ext_thread_eventual_OBJECTS)
ext_thread_eventual_LDADD = $(LDADD)
ext_thread_eventual_DEPENDENCIES = $(libutil) $(libabt)
am_ext_thread_future_OBJECTS = ext_thread_future.$(OBJEXT)
ext_thread_future_OBJECTS = $(am_ext_thread_future_OBJECTS)
ext_thread_future_LDADD = $(LDADD)
ext_thread_future_DEPENDENCIES = $(libutil) $(libabt)
am_ext_thread_join_OBJECTS = ext_thread_join.$(OBJEXT)
ext_thread_join_OBJECTS = $(am_ext_thread_join_OBJECTS)
ext_thread_join_LDADD = $(LDADD)
ext_thread_join_DEPENDENCIES = $(libutil) $(libabt)
am_ext_thread_mutex_OBJECTS = ext_thread_mutex.$(OBJEXT)
ext_thread_mutex_OBJECTS = $(am_ext_thread_mutex_OBJECTS)
ext_thread_mutex_LDADD = $(LDADD)
ext_thread_mutex_DEPENDENCIES = $(libutil) $(libabt)
am_ext_thread_rwlock_OBJECTS = ext_thread_rwlock.$(OBJEXT)
ext_thread_rwlock_OBJECTS = $(am_ext_thread_rwlock_OBJECTS)
ext_thread_rwlock_LDADD = $(LDADD)
ext_thread_rwlock_DEPENDENCIES = $(libutil) $(libabt)
am_future_create_OBJECTS = future_create.$(OBJEXT)
future_create_OBJECTS = $(am_future_create_OBJECTS)
future_create_LDADD = $(LDADD)
future_create_DEPENDENCIES = $(libutil) $(libabt)
am_info_print_OBJECTS = info_print.$(OBJEXT)
info_print_OBJECTS = $(am_info_print_OBJECTS)
info_print_LDADD = $(LDADD)
info_print_DEPENDENCIES = $(libutil) $(libabt)
am_info_print_stack_OBJECTS = info_print_stack.$(OBJEXT)
info_print_stack_OBJECTS = $(am_info_print_stack_OBJECTS)
info_print_stack_LDADD = $(LDADD)
info_print_stack_DEPENDENCIES = $(libutil) $(libabt)
am_info_stackdump_OBJECTS = info_stackdump.$(OBJEXT)
info_stackdump_OBJECTS = $(am_info_stackdump_OBJECTS)
info_stackdump_LDADD = $(LDADD)
info_stackdump_DEPENDENCIES = $(libutil) $(libabt)
am_info_stackdump2_OBJECTS = info_stackdump2.$(OBJEXT)
info_stackdump2_OBJECTS = $(am_info_stackdump2_OBJECTS)
info_stackdump2_LDADD = $(LDADD)
info_stackdump2_DEPENDENCIES = $(libutil) $(libabt)
am_init_finalize_OBJECTS = init_finalize.$(OBJEXT)
init_finalize_OBJECTS = $(am_init_finalize_OBJECTS)
init_finalize_LDADD = $(LDADD)
init_finalize_DEPENDENCIES = $(libutil) $(libabt)
am_main_sched_OBJECTS = main_sched.$(OBJEXT)
main_sched_OBJECTS = $(am_main_sched_OBJECTS)
main_sched_LDADD = $(LDADD)
main_sched_DEPENDENCIES = $(libutil) $(libabt)
am_mutex_OBJECTS = mutex.$(OBJEXT)
mutex_OBJECTS = $(am_mutex_OBJECTS)
mutex_LDADD = $(LDADD)
mutex_DEPENDENCIES = $(libutil) $(libabt)
am_mutex_prio_OBJECTS = mutex_prio.$(OBJEXT)
mutex_prio_OBJECTS = $(am_mutex_prio_OBJECTS)
mutex_prio_LDADD = $(LDADD)
mutex_prio_DEPENDENCIES = $(libutil) $(libabt)
am_mutex_recursive_OBJECTS = mutex_recursive.$(OBJEXT)
mutex_recursive_OBJECTS = $(am_mutex_recursive_OBJECTS)
mutex_recursive_LDADD = $(LDADD)
mutex_recursive_DEPENDENCIES = $(libutil) $(libabt)
am_mutex_spinlock_OBJECTS = mutex_spinlock.$(OBJEXT)
mutex_spinlock_OBJECTS = $(am_mutex_spinlock_OBJECTS)
mutex_spinlock_LDADD = $(LDADD)
mutex_spinlock_DEPENDENCIES = $(libutil) $(libabt)
am_mutex_static_OBJECTS = mutex_static.$(OBJEXT)
mutex_static_OBJECTS = $(am_mutex_static_OBJECTS)
mutex_static_LDADD = $(LDADD)
mutex_static_DEPENDENCIES = $(libutil) $(libabt)
am_mutex_unlock_se_OBJECTS = mutex_unlock_se.$(OBJEXT)
mutex_unlock_se_OBJECTS = $(am_mutex_unlock_se_OBJECTS)
mutex_unlock_se_LDADD = $(LDADD)
mutex_unlock_se_DEPENDENCIES = $(libutil) $(libabt)
am_pool_custom_OBJECTS = pool_custom.$(OBJEXT)
pool_custom_OBJECTS = $(am_pool_custom_OBJECTS)
pool_custom_LDADD = $(LDADD)
pool_custom_DEPENDENCIES = $(libutil) $(libabt)
am_rwlock_reader_incl_OBJECTS = rwlock_reader_incl.$(OBJEXT)
rwlock_reader_incl_OBJECTS = $(am_rwlock_reader_incl_OBJECTS)
rwlock_reader_incl_LDADD = $(LDADD)
rwlock_reader_incl_DEPENDENCIES = $(libutil) $(libabt)
am_rwlock_reader_writer_excl_OBJECTS =  \
	rwlock_reader_writer_excl.$(OBJEXT)
rwlock_reader_writer_excl_OBJECTS =  \
	$(am_rwlock_reader_writer_excl_OBJECTS)
rwlock_reader_writer_excl_LDADD = $(LDADD)
rwlock_reader_writer_excl_DEPENDENCIES = $(libutil) $(libabt)
am_rwlock_writer_excl_OBJECTS = rwlock_writer_excl.$(OBJEXT)
rwlock_writer_excl_OBJECTS = $(am_rwlock_writer_excl_OBJECTS)
rwlock_writer_excl_LDADD = $(LDADD)
rwlock_writer_excl_DEPENDENCIES = $(libutil) $(libabt)
am_sched_basic_OBJECTS = sched_basic.$(OBJEXT)
sched_basic_OBJECTS = $(am_sched_basic_OBJECTS)
sched_basic_LDADD = $(LDADD)
sched_basic_DEPENDENCIES = $(libutil) $(libabt)
am_sched_basic_wait_OBJECTS = sched_basic_wait.$(OBJEXT)
sched_basic_wait_OBJECTS = $(am_sched_basic_wait_OBJECTS)
sched_basic_wait_LDADD = $(LDADD)
sched_basic_wait_DEPENDENCIES = $(libutil) $(libabt)
am_sched_config_OBJECTS = sched_config.$(OBJEXT)
sched_config_OBJECTS = $(am_sched_config_OBJECTS)
sched_config_LDADD = $(LDADD)
sched_config_DEPENDENCIES = $(libutil) $(libabt)
am_sched_on_thread_OBJECTS = sched_on_thread.$(OBJEXT)
sched_on_thread_OBJECTS = $(am_sched_on_thread_OBJECTS)
sched_on_thread_LDADD = $(LDADD)
sched_on_thread_DEPENDENCIES = $(libutil) $(libabt)
am_sched_prio_OBJECTS = sched_prio.$(OBJEXT)
sched_prio_OBJECTS = $(am_sched_prio_OBJECTS)
sched_prio_LDADD = $(LDADD)
sched_prio_DEPENDENCIES = $(libutil) $(libabt)
am_sched_randws_OBJECTS = sched_randws.$(OBJEXT)
sched_randws_OBJECTS = $(am_sched_randws_OBJECTS)
sched_randws_LDADD = $(LDADD)
sched_randws_DEPENDENCIES = $(libutil) $(libabt)
am_sched_set_main_OBJECTS = sched_set_main.$(OBJEXT)
sched_set_main_OBJECTS = $(am_sched_set_main_OBJECTS)
sched_set_main_LDADD = $(LDADD)
sched_set_main_DEPENDENCIES = $(libutil) $(libabt)
am_sched_stack_OBJECTS = sched_stack.$(OBJEXT)
sched_stack_OBJECTS = $(am_sched_stack_OBJECTS)
sched_stack_LDADD = $(LDADD)
sched_stack_DEPENDENCIES = $(libutil) $(libabt)
am_sched_user_ws_OBJECTS = sched_user_ws.$(OBJEXT)
sched_user_ws_OBJECTS = $(am_sched_user_ws_OBJECTS)
sched_user_ws_LDADD = $(LDADD)
sched_user_ws_DEPENDENCIES = $(libutil) $(libabt)
am_self_rank_id_OBJECTS = self_rank_id.$(OBJEXT)
self_rank_id_OBJECTS = $(am_self_rank_id_OBJECTS)
self_rank_id_LDADD = $(LDADD)
self_rank_id_DEPENDENCIES = $(libutil) $(libabt)
am_self_type_OBJECTS = self_type.$(OBJEXT)
self_type_OBJECTS = $(am_self_type_OBJECTS)
self_type_LDADD = $(LDADD)
self_type_DEPENDENCIES = $(libutil) $(libabt)
am_sync_no_contention_OBJECTS = sync_no_contention.$(OBJEXT)
sync_no_contention_OBJECTS = $(am_sync_no_contention_OBJECTS)
sync_no_contention_LDADD = $(LDADD)
sync_no_contention_DEPENDENCIES = $(libutil) $(libabt)
am_task_create_OBJECTS = task_create.$(OBJEXT)
task_create_OBJECTS = $(am_task_create_OBJECTS)
task_create_LDADD = $(LDADD)
task_create_DEPENDENCIES = $(libutil) $(libabt)
am_task_create_on_xstream_OBJECTS = task_create_on_xstream.$(OBJEXT)
task_create_on_xstream_OBJECTS = $(am_task_create_on_xstream_OBJECTS)
task_create_on_xstream_LDADD = $(LDADD)
task_create_on_xstream_DEPENDENCIES = $(libutil) $(libabt)
am_task_data_OBJECTS = task_data.$(OBJEXT)
task_data_OBJECTS = $(am_task_data_OBJECTS)
task_data_LDADD = $(LDADD)
task_data_DEPENDENCIES = $(libutil) $(libabt)
am_task_data2_OBJECTS = task_data2.$(OBJEXT)
task_data2_OBJECTS = $(am_task_data2_OBJECTS)
task_data2_LDADD = $(LDADD)
task_data2_DEPENDENCIES = $(libutil) $(libabt)
am_task_revive_OBJECTS = task_revive.$(OBJEXT)
task_revive_OBJECTS = $(am_task_revive_OBJECTS)
task_revive_LDADD = $(LDADD)
task_revive_DEPENDENCIES = $(libutil) $(libabt)
am_thread_attr_OBJECTS = thread_attr.$(OBJEXT)
thread_attr_OBJECTS = $(am_thread_attr_OBJECTS)
thread_attr_LDADD = $(LDADD)
thread_attr_DEPENDENCIES = $(libutil) $(libabt)
am_thread_attr2_OBJECTS = thread_attr2.$(OBJEXT)
thread_attr2_OBJECTS = $(am_thread_attr2_OBJECTS)
thread_attr2_LDADD = $(LDADD)
thread_attr2_DEPENDENCIES = $(libutil) $(libabt)
am_thread_create_OBJECTS = thread_create.$(OBJEXT)
thread_create_OBJECTS = $(am_thread_create_OBJECTS)
thread_create_LDADD = $(LDADD)
thread_create_DEPENDENCIES = $(libutil) $(libabt)
am_thread_create2_OBJECTS = thread_create2.$(OBJEXT)
thread_create2_OBJECTS = $(am_thread_create2_OBJECTS)
thread_create2_LDADD = $(LDADD)
thread_create2_DEPENDENCIES = $(libutil) $(libabt)
am_thread_create_on_xstream_OBJECTS =  \
	thread_create_on_xstream.$(OBJEXT)
thread_create_on_xstream_OBJECTS =  \
	$(am_thread_create_on_xstream_OBJECTS)
thread_create_on_xstream_LDADD = $(LDADD)
thread_create_on_xstream_DEPENDENCIES = $(libutil) $(libabt)
am_thread_data_OBJECTS = thread_data.$(OBJEXT)
thread_data_OBJECTS = $(am_thread_data_OBJECTS)
thread_data_LDADD = $(LDADD)
thread_data_DEPENDENCIES = $(libutil) $(libabt)
am_thread_data2_OBJECTS = thread_data2.$(OBJEXT)
thread_data2_OBJECTS = $(am_thread_data2_OBJECTS)
thread_data2_LDADD = $(LDADD)
thread_data2_DEPENDENCIES = $(libutil) $(libabt)
am_thread_exit_OBJECTS = thread_exit.$(OBJEXT)
thread_exit_OBJECTS = $(am_thread_exit_OBJECTS)
thread_exit_LDADD = $(LDADD)
thread_exit_DEPENDENCIES = $(libutil) $(libabt)
am_thread_get_func_arg_OBJECTS = thread_get_func_arg.$(OBJEXT)
thread_get_func_arg_OBJECTS = $(am_thread_get_func_arg_OBJECTS)
thread_get_func_arg_LDADD = $(LDADD)
thread_get_func_arg_DEPENDENCIES = $(libutil) $(libabt)
am_thread_get_last_xstream_OBJECTS =  \
	thread_get_last_xstream.$(OBJEXT)
thread_get_last_xstream_OBJECTS =  \
	$(am_thread_get_last_xstream_OBJECTS)
thread_get_last_xstream_LDADD = $(LDADD)
thread_get_last_xstream_DEPENDENCIES = $(libutil) $(libabt)
am_thread_id_OBJECTS = thread_id.$(OBJEXT)
thread_id_OBJECTS = $(am_thread_id_OBJECTS)
thread_id_LDADD = $(LDADD)
thread_id_DEPENDENCIES = $(libutil) $(libabt)
am_thread_migrate_OBJECTS = thread_migrate.$(OBJEXT)
thread_migrate_OBJECTS = $(am_thread_migrate_OBJECTS)
thread_migrate_LDADD = $(LDADD)
thread_migrate_DEPENDENCIES = $(libutil) $(libabt)
am_thread_revive_OBJECTS = thread_revive.$(OBJEXT)
thread_revive_OBJECTS = $(am_thread_revive_OBJECTS)
thread_revive_LDADD = $(LDADD)
thread_revive_DEPENDENCIES = $(libutil) $(libabt)
am_thread_self_suspend_resume_OBJECTS =  \
	thread_self_suspend_resume.$(OBJEXT)
thread_self_suspend_resume_OBJECTS =  \
	$(am_thread_self_suspend_resume_OBJECTS)
thread_self_suspend_resume_LDADD = $(LDADD)
thread_self_suspend_resume_DEPENDENCIES = $(libutil) $(libabt)
am_thread_task_OBJECTS = thread_task.$(OBJEXT)
thread_task_OBJECTS = $(am_thread_task_OBJECTS)
thread_task_LDADD = $(LDADD)
thread_task_DEPENDENCIES = $(libutil) $(libabt)
am_thread_task_arg_OBJECTS = thread_task_arg.$(OBJEXT)
thread_task_arg_OBJECTS = $(am_thread_task_arg_OBJECTS)
thread_task_arg_LDADD = $(LDADD)
thread_task_arg_DEPENDENCIES = $(libutil) $(libabt)
am_thread_task_num_OBJECTS = thread_task_num.$(OBJEXT)
thread_task_num_OBJECTS = $(am_thread_task_num_OBJECTS)
thread_task_num_LDADD = $(LDADD)
thread_task_num_DEPENDENCIES = $(libutil) $(libabt)
am_thread_yield_OBJECTS = thread_yield.$(OBJEXT)
thread_yield_OBJECTS = $(am_thread_yield_OBJECTS)
thread_yield_LDADD = $(LDADD)
thread_yield_DEPENDENCIES = $(libutil) $(libabt)
am_thread_yield2_OBJECTS = thread_yield2.$(OBJEXT)
thread_yield2_OBJECTS = $(am_thread_yield2_OBJECTS)
thread_yield2_LDADD = $(LDADD)
thread_yield2_DEPENDENCIES = $(libutil) $(libabt)
am_thread_yield_to_OBJECTS = thread_yield_to.$(OBJEXT)
thread_yield_to_OBJECTS = $(am_thread_yield_to_OBJECTS)
thread_yield_to_LDADD = $(LDADD)
thread_yield_to_DEPENDENCIES = $(libutil) $(libabt)
am_timer_OBJECTS = timer.$(OBJEXT)
timer_OBJECTS = $(am_timer_OBJECTS)
timer_LDADD = $(LDADD)
timer_DEPENDENCIES = $(libutil) $(libabt)
am_unit_OBJECTS = unit.$(OBJEXT)
unit_OBJECTS = $(am_unit_OBJECTS)
unit_LDADD = $(LDADD)
unit_DEPENDENCIES = $(libutil) $(libabt)
am_xstream_affinity_OBJECTS = xstream_affinity.$(OBJEXT)
xstream_affinity_OBJECTS = $(am_xstream_affinity_OBJECTS)
xstream_affinity_LDADD = $(LDADD)
xstream_affinity_DEPENDENCIES = $(libutil) $(libabt)
am_xstream_barrier_OBJECTS = xstream_barrier.$(OBJEXT)
xstream_barrier_OBJECTS = $(am_xstream_barrier_OBJECTS)
xstream_barrier_LDADD = $(LDADD)
xstream_barrier_DEPENDENCIES = $(libutil) $(libabt)
am_xstream_create_OBJECTS = xstream_create.$(OBJEXT)
xstream_create_OBJECTS = $(am_xstream_create_OBJECTS)
xstream_create_LDADD = $(LDADD)
xstream_create_DEPENDENCIES = $(libutil) $(libabt)
am_xstream_rank_OBJECTS = xstream_rank.$(OBJEXT)
xstream_rank_OBJECTS = $(am_xstream_rank_OBJECTS)
xstream_rank_LDADD = $(LDADD)
xstream_rank_DEPENDENCIES = $(libutil) $(libabt)
am_xstream_revive_OBJECTS = xstream_revive.$(OBJEXT)
xstream_revive_OBJECTS = $(am_xstream_revive_OBJECTS)
xstream_revive_LDADD = $(LDADD)
xstream_revive_DEPENDENCIES = $(libutil) $(libabt)
am_xstream_set_main_sched_OBJECTS = xstream_set_main_sched.$(OBJEXT)
xstream_set_main_sched_OBJECTS = $(am_xstream_set_main_sched_OBJECTS)
xstream_set_main_sched_LDADD = $(LDADD)
xstream_set_main_sched_DEPENDENCIES = $(libutil) $(libabt)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/src/include
depcomp = $(SHELL) $(top_srcdir)/m4/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/barrier.Po ./$(DEPDIR)/cond_join.Po \
	./$(DEPDIR)/cond_signal_in_main.Po ./$(DEPDIR)/cond_static.Po \
	./$(DEPDIR)/cond_test.Po ./$(DEPDIR)/cond_timedwait.Po \
	./$(DEPDIR)/error.Po ./$(DEPDIR)/eventual_create.Po \
	./$(DEPDIR)/eventual_test.Po ./$(DEPDIR)/ext_thread.Po \
	./$(DEPDIR)/ext_thread2.Po ./$(DEPDIR)/ext_thread_barrier.Po \
	./$(DEPDIR)/ext_thread_cond.Po \
	./$(DEPDIR)/ext_thread_eventual.Po \
	./$(DEPDIR)/ext_thread_future.Po \
	./$(DEPDIR)/ext_thread_join.Po ./$(DEPDIR)/ext_thread_mutex.Po \
	./$(DEPDIR)/ext_thread_rwlock.Po ./$(DEPDIR)/future_create.Po \
	./$(DEPDIR)/info_print.Po ./$(DEPDIR)/info_print_stack.Po \
	./$(DEPDIR)/info_stackdump.Po ./$(DEPDIR)/info_stackdump2.Po \
	./$(DEPDIR)/init_finalize.Po ./$(DEPDIR)/main_sched.Po \
	./$(DEPDIR)/mutex.Po ./$(DEPDIR)/mutex_prio.Po \
	./$(DEPDIR)/mutex_recursive.Po ./$(DEPDIR)/mutex_spinlock.Po \
	./$(DEPDIR)/mutex_static.Po ./$(DEPDIR)/mutex_unlock_se.Po \
	./$(DEPDIR)/pool_custom.Po ./$(DEPDIR)/rwlock_reader_incl.Po \
	./$(DEPDIR)/rwlock_reader_writer_excl.Po \
	./$(DEPDIR)/rwlock_writer_excl.Po ./$(DEPDIR)/sched_basic.Po \
	./$(DEPDIR)/sched_basic_wait.Po ./$(DEPDIR)/sched_config.Po \
	./$(DEPDIR)/sched_on_thread.Po ./$(DEPDIR)/sched_prio.Po \
	./$(DEPDIR)/sched_randws.Po ./$(DEPDIR)/sched_set_main.Po \
	./$(DEPDIR)/sched_stack.Po ./$(DEPDIR)/sched_user_ws.Po \
	./$(DEPDIR)/self_rank_id.Po ./$(DEPDIR)/self_type.Po \
	./$(DEPDIR)/sync_no_contention.Po ./$(DEPDIR)/task_create.Po \
	./$(DEPDIR)/task_create_on_xstream.Po ./$(DEPDIR)/task_data.Po \
	./$(DEPDIR)/task_data2.Po ./$(DEPDIR)/task_revive.Po \
	./$(DEPDIR)/thread_attr.Po ./$(DEPDIR)/thread_attr2.Po \
	./$(DEPDIR)/thread_create.Po ./$(DEPDIR)/thread_create2.Po \
	./$(DEPDIR)/thread_create_on_xstream.Po \
	./$(DEPDIR)/thread_data.Po ./$(DEPDIR)/thread_data2.Po \
	./$(DEPDIR)/thread_exit.Po ./$(DEPDIR)/thread_get_func_arg.Po \
	./$(DEPDIR)/thread_get_last_xstream.Po \
	./$(DEPDIR)/thread_id.Po ./$(DEPDIR)/thread_migrate.Po \
	./$(DEPDIR)/thread_revive.Po \
	./$(DEPDIR)/thread_self_suspend_resume.Po \
	./$(DEPDIR)/thread_task.Po ./$(DEPDIR)/thread_task_arg.Po \
	./$(DEPDIR)/thread_task_num.Po ./$(DEPDIR)/thread_yield.Po \
	./$(DEPDIR)/thread_yield2.Po ./$(DEPDIR)/thread_yield_to.Po \
	./$(DEPDIR)/timer.Po ./$(DEPDIR)/unit.Po \
	./$(DEPDIR)/xstream_affinity.Po ./$(DEPDIR)/xstream_barrier.Po \
	./$(DEPDIR)/xstream_create.Po ./$(DEPDIR)/xstream_rank.Po \
	./$(DEPDIR)/xstream_revive.Po \
	./$(DEPDIR)/xstream_set_main_sched.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(barrier_SOURCES) $(cond_join_SOURCES) \
	$(cond_signal_in_main_SOURCES) $(cond_static_SOURCES) \
	$(cond_test_SOURCES) $(cond_timedwait_SOURCES) \
	$(error_SOURCES) $(eventual_create_SOURCES) \
	$(eventual_test_SOURCES) $(ext_thread_SOURCES) \
	$(ext_thread2_SOURCES) $(ext_thread_barrier_SOURCES) \
	$(ext_thread_cond_SOURCES) $(ext_thread_eventual_SOURCES) \
	$(ext_thread_future_SOURCES) $(ext_thread_join_SOURCES) \
	$(ext_thread_mutex_SOURCES) $(ext_thread_rwlock_SOURCES) \
	$(future_create_SOURCES) $(info_print_SOURCES) \
	$(info_print_stack_SOURCES) $(info_stackdump_SOURCES) \
	$(info_stackdump2_SOURCES) $(init_finalize_SOURCES) \
	$(main_sched_SOURCES) $(mutex_SOURCES) $(mutex_prio_SOURCES) \
	$(mutex_recursive_SOURCES) $(mutex_spinlock_SOURCES) \
	$(mutex_static_SOURCES) $(mutex_unlock_se_SOURCES) \
	$(pool_custom_SOURCES) $(rwlock_reader_incl_SOURCES) \
	$(rwlock_reader_writer_excl_SOURCES) \
	$(rwlock_writer_excl_SOURCES) $(sched_basic_SOURCES) \
	$(sched_basic_wait_SOURCES) $(sched_config_SOURCES) \
	$(sched_on_thread_SOURCES) $(sched_prio_SOURCES) \
	$(sched_randws_SOURCES) $(sched_set_main_SOURCES) \
	$(sched_stack_SOURCES) $(sched_user_ws_SOURCES) \
	$(self_rank_id_SOURCES) $(self_type_SOURCES) \
	$(sync_no_contention_SOURCES) $(task_create_SOURCES) \
	$(task_create_on_xstream_SOURCES) $(task_data_SOURCES) \
	$(task_data2_SOURCES) $(task_revive_SOURCES) \
	$(thread_attr_SOURCES) $(thread_attr2_SOURCES) \
	$(thread_create_SOURCES) $(thread_create2_SOURCES) \
	$(thread_create_on_xstream_SOURCES) $(thread_data_SOURCES) \
	$(thread_data2_SOURCES) $(thread_exit_SOURCES) \
	$(thread_get_func_arg_SOURCES) \
	$(thread_get_last_xstream_SOURCES) $(thread_id_SOURCES) \
	$(thread_migrate_SOURCES) $(thread_revive_SOURCES) \
	$(thread_self_suspend_resume_SOURCES) $(thread_task_SOURCES) \
	$(thread_task_arg_SOURCES) $(thread_task_num_SOURCES) \
	$(thread_yield_SOURCES) $(thread_yield2_SOURCES) \
	$(thread_yield_to_SOURCES) $(timer_SOURCES) $(unit_SOURCES) \
	$(xstream_affinity_SOURCES) $(xstream_barrier_SOURCES) \
	$(xstream_create_SOURCES) $(xstream_rank_SOURCES) \
	$(xstream_revive_SOURCES) $(xstream_set_main_sched_SOURCES)
DIST_SOURCES = $(barrier_SOURCES) $(cond_join_SOURCES) \
	$(cond_signal_in_main_SOURCES) $(cond_static_SOURCES) \
	$(cond_test_SOURCES) $(cond_timedwait_SOURCES) \
	$(error_SOURCES) $(eventual_create_SOURCES) \
	$(eventual_test_SOURCES) $(ext_thread_SOURCES) \
	$(ext_thread2_SOURCES) $(ext_thread_barrier_SOURCES) \
	$(ext_thread_cond_SOURCES) $(ext_thread_eventual_SOURCES) \
	$(ext_thread_future_SOURCES) $(ext_thread_join_SOURCES) \
	$(ext_thread_mutex_SOURCES) $(ext_thread_rwlock_SOURCES) \
	$(future_create_SOURCES) $(info_print_SOURCES) \
	$(info_print_stack_SOURCES) $(info_stackdump_SOURCES) \
	$(info_stackdump2_SOURCES) $(init_finalize_SOURCES) \
	$(main_sched_SOURCES) $(mutex_SOURCES) $(mutex_prio_SOURCES) \
	$(mutex_recursive_SOURCES) $(mutex_spinlock_SOURCES) \
	$(mutex_static_SOURCES) $(mutex_unlock_se_SOURCES) \
	$(pool_custom_SOURCES) $(rwlock_reader_incl_SOURCES) \
	$(rwlock_reader_writer_excl_SOURCES) \
	$(rwlock_writer_excl_SOURCES) $(sched_basic_SOURCES) \
	$(sched_basic_wait_SOURCES) $(sched_config_SOURCES) \
	$(sched_on_thread_SOURCES) $(sched_prio_SOURCES) \
	$(sched_randws_SOURCES) $(sched_set_main_SOURCES) \
	$(sched_stack_SOURCES) $(sched_user_ws_SOURCES) \
	$(self_rank_id_SOURCES) $(self_type_SOURCES) \
	$(sync_no_contention_SOURCES) $(task_create_SOURCES) \
	$(task_create_on_xstream_SOURCES) $(task_data_SOURCES) \
	$(task_data2_SOURCES) $(task_revive_SOURCES) \
	$(thread_attr_SOURCES) $(thread_attr2_SOURCES) \
	$(thread_create_SOURCES) $(thread_create2_SOURCES) \
	$(thread_create_on_xstream_SOURCES) $(thread_data_SOURCES) \
	$(thread_data2_SOURCES) $(thread_exit_SOURCES) \
	$(thread_get_func_arg_SOURCES) \
	$(thread_get_last_xstream_SOURCES) $(thread_id_SOURCES) \
	$(thread_migrate_SOURCES) $(thread_revive_SOURCES) \
	$(thread_self_suspend_resume_SOURCES) $(thread_task_SOURCES) \
	$(thread_task_arg_SOURCES) $(thread_task_num_SOURCES) \
	$(thread_yield_SOURCES) $(thread_yield2_SOURCES) \
	$(thread_yield_to_SOURCES) $(timer_SOURCES) $(unit_SOURCES) \
	$(xstream_affinity_SOURCES) $(xstream_barrier_SOURCES) \
	$(xstream_create_SOURCES) $(xstream_rank_SOURCES) \
	$(xstream_revive_SOURCES) $(xstream_set_main_sched_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
@ABT_CONFIG_DISABLE_EXT_THREAD_TRUE@am__EXEEXT_2 = self_type$(EXEEXT) \
@ABT_CONFIG_DISABLE_EXT_THREAD_TRUE@	ext_thread$(EXEEXT) \
@ABT_CONFIG_DISABLE_EXT_THREAD_TRUE@	ext_thread2$(EXEEXT) \
@ABT_CONFIG_DISABLE_EXT_THREAD_TRUE@	ext_thread_barrier$(EXEEXT) \
@ABT_CONFIG_DISABLE_EXT_THREAD_TRUE@	ext_thread_cond$(EXEEXT) \
@ABT_CONFIG_DISABLE_EXT_THREAD_TRUE@	ext_thread_eventual$(EXEEXT) \
@ABT_CONFIG_DISABLE_EXT_THREAD_TRUE@	ext_thread_future$(EXEEXT) \
@ABT_CONFIG_DISABLE_EXT_THREAD_TRUE@	ext_thread_join$(EXEEXT) \
@ABT_CONFIG_DISABLE_EXT_THREAD_TRUE@	ext_thread_mutex$(EXEEXT) \
@ABT_CONFIG_DISABLE_EXT_THREAD_TRUE@	ext_thread_rwlock$(EXEEXT)
@ABT_CONFIG_DISABLE_ERROR_CHECK_TRUE@am__EXEEXT_3 =  \
@ABT_CONFIG_DISABLE_ERROR_CHECK_TRUE@	self_type$(EXEEXT)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/m4/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/m4/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/m4/depcomp \
	$(top_srcdir)/m4/test-driver $(top_srcdir)/test/Makefile.mk
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABT_DEPRECATED = @ABT_DEPRECATED@
ABT_ENABLE_VER_20_API = @ABT_ENABLE_VER_20_API@
ABT_NULL = @ABT_NULL@
ABT_NUMVERSION = @ABT_NUMVERSION@
ABT_RT_CFLAGS = @ABT_RT_CFLAGS@
ABT_RT_LDFLAGS = @ABT_RT_LDFLAGS@
ABT_VERSION = @ABT_VERSION@
ABT_VISIBILITY_CFLAGS = @ABT_VISIBILITY_CFLAGS@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PAPI_CFLAGS = @PAPI_CFLAGS@
PAPI_LDFLAGS = @PAPI_LDFLAGS@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
abttest_timer_library = @abttest_timer_library@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libabt_so_version = @libabt_so_version@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = $(DEPS_CPPFLAGS) -I$(top_builddir)/src/include \
	-I$(top_srcdir)/test/util
AM_LDFLAGS = $(DEPS_LDFLAGS) -lm
libabt = $(top_builddir)/src/libabt.la
libutil = $(top_builddir)/test/util/libutil.la
LDADD = $(libutil) $(libabt)
init_finalize_SOURCES = init_finalize.c
xstream_create_SOURCES = xstream_create.c
xstream_revive_SOURCES = xstream_revive.c
xstream_affinity_SOURCES = xstream_affinity.c
xstream_barrier_SOURCES = xstream_barrier.c
xstream_rank_SOURCES = xstream_rank.c
xstream_set_main_sched_SOURCES = xstream_set_main_sched.c
thread_create_SOURCES = thread_create.c
thread_create2_SOURCES = thread_create2.c
thread_create_on_xstream_SOURCES = thread_create_on_xstream.c
thread_revive_SOURCES = thread_revive.c
thread_attr_SOURCES = thread_attr.c
thread_attr2_SOURCES = thread_attr2.c
thread_yield_SOURCES = thread_yield.c
thread_yield2_SOURCES = thread_yield2.c
thread_yield_to_SOURCES = thread_yield_to.c
thread_exit_SOURCES = thread_exit.c
thread_self_suspend_resume_SOURCES = thread_self_suspend_resume.c
thread_get_last_xstream_SOURCES = thread_get_last_xstream.c
thread_get_func_arg_SOURCES = thread_get_func_arg.c
thread_migrate_SOURCES = thread_migrate.c
thread_data_SOURCES = thread_data.c
thread_data2_SOURCES = thread_data2.c
thread_id_SOURCES = thread_id.c
task_create_SOURCES = task_create.c
task_create_on_xstream_SOURCES = task_create_on_xstream.c
task_revive_SOURCES = task_revive.c
task_data_SOURCES = task_data.c
task_data2_SOURCES = task_data2.c
thread_task_SOURCES = thread_task.c
thread_task_arg_SOURCES = thread_task_arg.c
thread_task_num_SOURCES = thread_task_num.c
sched_basic_SOURCES = sched_basic.c
sched_basic_wait_SOURCES = sched_basic_wait.c
sched_on_thread_SOURCES = sched_on_thread.c
sched_prio_SOURCES = sched_prio.c
sched_randws_SOURCES = sched_randws.c
sched_set_main_SOURCES = sched_set_main.c
sched_stack_SOURCES = sched_stack.c
sched_config_SOURCES = sched_config.c
sched_user_ws_SOURCES = sched_user_ws.c
pool_custom_SOURCES = pool_custom.c
sync_no_contention_SOURCES = sync_no_contention.c
main_sched_SOURCES = main_sched.c
mutex_SOURCES = mutex.c
mutex_prio_SOURCES = mutex_prio.c
mutex_recursive_SOURCES = mutex_recursive.c
mutex_spinlock_SOURCES = mutex_spinlock.c
mutex_static_SOURCES = mutex_static.c
mutex_unlock_se_SOURCES = mutex_unlock_se.c
cond_test_SOURCES = cond_test.c
cond_join_SOURCES = cond_join.c
cond_signal_in_main_SOURCES = cond_signal_in_main.c
cond_static_SOURCES = cond_static.c
cond_timedwait_SOURCES = cond_timedwait.c
rwlock_writer_excl_SOURCES = rwlock_writer_excl.c
rwlock_reader_writer_excl_SOURCES = rwlock_reader_writer_excl.c
rwlock_reader_incl_SOURCES = rwlock_reader_incl.c
future_create_SOURCES = future_create.c
eventual_create_SOURCES = eventual_create.c
eventual_test_SOURCES = eventual_test.c
barrier_SOURCES = barrier.c
self_rank_id_SOURCES = self_rank_id.c
self_type_SOURCES = self_type.c
ext_thread_SOURCES = ext_thread.c
ext_thread2_SOURCES = ext_thread2.c
ext_thread_barrier_SOURCES = ext_thread_barrier.c
ext_thread_cond_SOURCES = ext_thread_cond.c
ext_thread_eventual_SOURCES = ext_thread_eventual.c
ext_thread_future_SOURCES = ext_thread_future.c
ext_thread_join_SOURCES = ext_thread_join.c
ext_thread_mutex_SOURCES = ext_thread_mutex.c
ext_thread_rwlock_SOURCES = ext_thread_rwlock.c
timer_SOURCES = timer.c
info_print_SOURCES = info_print.c
info_print_stack_SOURCES = info_print_stack.c
info_stackdump_SOURCES = info_stackdump.c
info_stackdump2_SOURCES = info_stackdump2.c
unit_SOURCES = unit.c
error_SOURCES = error.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/test/Makefile.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/basic/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/basic/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/test/Makefile.mk $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

barrier$(EXEEXT): $(barrier_OBJECTS) $(barrier_DEPENDENCIES) $(EXTRA_barrier_DEPENDENCIES) 
	@rm -f barrier$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(barrier_OBJECTS) $(barrier_LDADD) $(LIBS)

cond_join$(EXEEXT): $(cond_join_OBJECTS) $(cond_join_DEPENDENCIES) $(EXTRA_cond_join_DEPENDENCIES) 
	@rm -f cond_join$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cond_join_OBJECTS) $(cond_join_LDADD) $(LIBS)

cond_signal_in_main$(EXEEXT): $(cond_signal_in_main_OBJECTS) $(cond_signal_in_main_DEPENDENCIES) $(EXTRA_cond_signal_in_main_DEPENDENCIES) 
	@rm -f cond_signal_in_main$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cond_signal_in_main_OBJECTS) $(cond_signal_in_main_LDADD) $(LIBS)

cond_static$(EXEEXT): $(cond_static_OBJECTS) $(cond_static_DEPENDENCIES) $(EXTRA_cond_static_DEPENDENCIES) 
	@rm -f cond_static$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cond_static_OBJECTS) $(cond_static_LDADD) $(LIBS)

cond_test$(EXEEXT): $(cond_test_OBJECTS) $(cond_test_DEPENDENCIES) $(EXTRA_cond_test_DEPENDENCIES) 
	@rm -f cond_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cond_test_OBJECTS) $(cond_test_LDADD) $(LIBS)

cond_timedwait$(EXEEXT): $(cond_timedwait_OBJECTS) $(cond_timedwait_DEPENDENCIES) $(EXTRA_cond_timedwait_DEPENDENCIES) 
	@rm -f cond_timedwait$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cond_timedwait_OBJECTS) $(cond_timedwait_LDADD) $(LIBS)

error$(EXEEXT): $(error_OBJECTS) $(error_DEPENDENCIES) $(EXTRA_error_DEPENDENCIES) 
	@rm -f error$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(error_OBJECTS) $(error_LDADD) $(LIBS)

eventual_create$(EXEEXT): $(eventual_create_OBJECTS) $(eventual_create_DEPENDENCIES) $(EXTRA_eventual_create_DEPENDENCIES) 
	@rm -f eventual_create$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(eventual_create_OBJECTS) $(eventual_create_LDADD) $(LIBS)

eventual_test$(EXEEXT): $(eventual_test_OBJECTS) $(eventual_test_DEPENDENCIES) $(EXTRA_eventual_test_DEPENDENCIES) 
	@rm -f eventual_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(eventual_test_OBJECTS) $(eventual_test_LDADD) $(LIBS)

ext_thread$(EXEEXT): $(ext_thread_OBJECTS) $(ext_thread_DEPENDENCIES) $(EXTRA_ext_thread_DEPENDENCIES) 
	@rm -f ext_thread$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ext_thread_OBJECTS) $(ext_thread_LDADD) $(LIBS)

ext_thread2$(EXEEXT): $(ext_thread2_OBJECTS) $(ext_thread2_DEPENDENCIES) $(EXTRA_ext_thread2_DEPENDENCIES) 
	@rm -f ext_thread2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ext_thread2_OBJECTS) $(ext_thread2_LDADD) $(LIBS)

ext_thread_barrier$(EXEEXT): $(ext_thread_barrier_OBJECTS) $(ext_thread_barrier_DEPENDENCIES) $(EXTRA_ext_thread_barrier_DEPENDENCIES) 
	@rm -f ext_thread_barrier$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ext_thread_barrier_OBJECTS) $(ext_thread_barrier_LDADD) $(LIBS)

ext_thread_cond$(EXEEXT): $(ext_thread_cond_OBJECTS) $(ext_thread_cond_DEPENDENCIES) $(EXTRA_ext_thread_cond_DEPENDENCIES) 
	@rm -f ext_thread_cond$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ext_thread_cond_OBJECTS) $(ext_thread_cond_LDADD) $(LIBS)

ext_thread_eventual$(EXEEXT): $(ext_thread_eventual_OBJECTS) $(ext_thread_eventual_DEPENDENCIES) $(EXTRA_ext_thread_eventual_DEPENDENCIES) 
	@rm -f ext_thread_eventual$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ext_thread_eventual_OBJECTS) $(ext_thread_eventual_LDADD) $(LIBS)

ext_thread_future$(EXEEXT): $(ext_thread_future_OBJECTS) $(ext_thread_future_DEPENDENCIES) $(EXTRA_ext_thread_future_DEPENDENCIES) 
	@rm -f ext_thread_future$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ext_thread_future_OBJECTS) $(ext_thread_future_LDADD) $(LIBS)

ext_thread_join$(EXEEXT): $(ext_thread_join_OBJECTS) $(ext_thread_join_DEPENDENCIES) $(EXTRA_ext_thread_join_DEPENDENCIES) 
	@rm -f ext_thread_join$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ext_thread_join_OBJECTS) $(ext_thread_join_LDADD) $(LIBS)

ext_thread_mutex$(EXEEXT): $(ext_thread_mutex_OBJECTS) $(ext_thread_mutex_DEPENDENCIES) $(EXTRA_ext_thread_mutex_DEPENDENCIES) 
	@rm -f ext_thread_mutex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ext_thread_mutex_OBJECTS) $(ext_thread_mutex_LDADD) $(LIBS)

ext_thread_rwlock$(EXEEXT): $(ext_thread_rwlock_OBJECTS) $(ext_thread_rwlock_DEPENDENCIES) $(EXTRA_ext_thread_rwlock_DEPENDENCIES) 
	@rm -f ext_thread_rwlock$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ext_thread_rwlock_OBJECTS) $(ext_thread_rwlock_LDADD) $(LIBS)

future_create$(EXEEXT): $(future_create_OBJECTS) $(future_create_DEPENDENCIES) $(EXTRA_future_create_DEPENDENCIES) 
	@rm -f future_create$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(future_create_OBJECTS) $(future_create_LDADD) $(LIBS)

info_print$(EXEEXT): $(info_print_OBJECTS) $(info_print_DEPENDENCIES) $(EXTRA_info_print_DEPENDENCIES) 
	@rm -f info_print$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(info_print_OBJECTS) $(info_print_LDADD) $(LIBS)

info_print_stack$(EXEEXT): $(info_print_stack_OBJECTS) $(info_print_stack_DEPENDENCIES) $(EXTRA_info_print_stack_DEPENDENCIES) 
	@rm -f info_print_stack$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(info_print_stack_OBJECTS) $(info_print_stack_LDADD) $(LIBS)

info_stackdump$(EXEEXT): $(info_stackdump_OBJECTS) $(info_stackdump_DEPENDENCIES) $(EXTRA_info_stackdump_DEPENDENCIES) 
	@rm -f info_stackdump$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(info_stackdump_OBJECTS) $(info_stackdump_LDADD) $(LIBS)

info_stackdump2$(EXEEXT): $(info_stackdump2_OBJECTS) $(info_stackdump2_DEPENDENCIES) $(EXTRA_info_stackdump2_DEPENDENCIES) 
	@rm -f info_stackdump2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(info_stackdump2_OBJECTS) $(info_stackdump2_LDADD) $(LIBS)

init_finalize$(EXEEXT): $(init_finalize_OBJECTS) $(init_finalize_DEPENDENCIES) $(EXTRA_init_finalize_DEPENDENCIES) 
	@rm -f init_finalize$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(init_finalize_OBJECTS) $(init_finalize_LDADD) $(LIBS)

main_sched$(EXEEXT): $(main_sched_OBJECTS) $(main_sched_DEPENDENCIES) $(EXTRA_main_sched_DEPENDENCIES) 
	@rm -f main_sched$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(main_sched_OBJECTS) $(main_sched_LDADD) $(LIBS)

mutex$(EXEEXT): $(mutex_OBJECTS) $(mutex_DEPENDENCIES) $(EXTRA_mutex_DEPENDENCIES) 
	@rm -f mutex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mutex_OBJECTS) $(mutex_LDADD) $(LIBS)

mutex_prio$(EXEEXT): $(mutex_prio_OBJECTS) $(mutex_prio_DEPENDENCIES) $(EXTRA_mutex_prio_DEPENDENCIES) 
	@rm -f mutex_prio$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mutex_prio_OBJECTS) $(mutex_prio_LDADD) $(LIBS)

mutex_recursive$(EXEEXT): $(mutex_recursive_OBJECTS) $(mutex_recursive_DEPENDENCIES) $(EXTRA_mutex_recursive_DEPENDENCIES) 
	@rm -f mutex_recursive$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mutex_recursive_OBJECTS) $(mutex_recursive_LDADD) $(LIBS)

mutex_spinlock$(EXEEXT): $(mutex_spinlock_OBJECTS) $(mutex_spinlock_DEPENDENCIES) $(EXTRA_mutex_spinlock_DEPENDENCIES) 
	@rm -f mutex_spinlock$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mutex_spinlock_OBJECTS) $(mutex_spinlock_LDADD) $(LIBS)

mutex_static$(EXEEXT): $(mutex_static_OBJECTS) $(mutex_static_DEPENDENCIES) $(EXTRA_mutex_static_DEPENDENCIES) 
	@rm -f mutex_static$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mutex_static_OBJECTS) $(mutex_static_LDADD) $(LIBS)

mutex_unlock_se$(EXEEXT): $(mutex_unlock_se_OBJECTS) $(mutex_unlock_se_DEPENDENCIES) $(EXTRA_mutex_unlock_se_DEPENDENCIES) 
	@rm -f mutex_unlock_se$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mutex_unlock_se_OBJECTS) $(mutex_unlock_se_LDADD) $(LIBS)

pool_custom$(EXEEXT): $(pool_custom_OBJECTS) $(pool_custom_DEPENDENCIES) $(EXTRA_pool_custom_DEPENDENCIES) 
	@rm -f pool_custom$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(pool_custom_OBJECTS) $(pool_custom_LDADD) $(LIBS)

rwlock_reader_incl$(EXEEXT): $(rwlock_reader_incl_OBJECTS) $(rwlock_reader_incl_DEPENDENCIES) $(EXTRA_rwlock_reader_incl_DEPENDENCIES) 
	@rm -f rwlock_reader_incl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rwlock_reader_incl_OBJECTS) $(rwlock_reader_incl_LDADD) $(LIBS)

rwlock_reader_writer_excl$(EXEEXT): $(rwlock_reader_writer_excl_OBJECTS) $(rwlock_reader_writer_excl_DEPENDENCIES) $(EXTRA_rwlock_reader_writer_excl_DEPENDENCIES) 
	@rm -f rwlock_reader_writer_excl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rwlock_reader_writer_excl_OBJECTS) $(rwlock_reader_writer_excl_LDADD) $(LIBS)

rwlock_writer_excl$(EXEEXT): $(rwlock_writer_excl_OBJECTS) $(rwlock_writer_excl_DEPENDENCIES) $(EXTRA_rwlock_writer_excl_DEPENDENCIES) 
	@rm -f rwlock_writer_excl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rwlock_writer_excl_OBJECTS) $(rwlock_writer_excl_LDADD) $(LIBS)

sched_basic$(EXEEXT): $(sched_basic_OBJECTS) $(sched_basic_DEPENDENCIES) $(EXTRA_sched_basic_DEPENDENCIES) 
	@rm -f sched_basic$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_basic_OBJECTS) $(sched_basic_LDADD) $(LIBS)

sched_basic_wait$(EXEEXT): $(sched_basic_wait_OBJECTS) $(sched_basic_wait_DEPENDENCIES) $(EXTRA_sched_basic_wait_DEPENDENCIES) 
	@rm -f sched_basic_wait$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_basic_wait_OBJECTS) $(sched_basic_wait_LDADD) $(LIBS)

sched_config$(EXEEXT): $(sched_config_OBJECTS) $(sched_config_DEPENDENCIES) $(EXTRA_sched_config_DEPENDENCIES) 
	@rm -f sched_config$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_config_OBJECTS) $(sched_config_LDADD) $(LIBS)

sched_on_thread$(EXEEXT): $(sched_on_thread_OBJECTS) $(sched_on_thread_DEPENDENCIES) $(EXTRA_sched_on_thread_DEPENDENCIES) 
	@rm -f sched_on_thread$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_on_thread_OBJECTS) $(sched_on_thread_LDADD) $(LIBS)

sched_prio$(EXEEXT): $(sched_prio_OBJECTS) $(sched_prio_DEPENDENCIES) $(EXTRA_sched_prio_DEPENDENCIES) 
	@rm -f sched_prio$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_prio_OBJECTS) $(sched_prio_LDADD) $(LIBS)

sched_randws$(EXEEXT): $(sched_randws_OBJECTS) $(sched_randws_DEPENDENCIES) $(EXTRA_sched_randws_DEPENDENCIES) 
	@rm -f sched_randws$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_randws_OBJECTS) $(sched_randws_LDADD) $(LIBS)

sched_set_main$(EXEEXT): $(sched_set_main_OBJECTS) $(sched_set_main_DEPENDENCIES) $(EXTRA_sched_set_main_DEPENDENCIES) 
	@rm -f sched_set_main$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_set_main_OBJECTS) $(sched_set_main_LDADD) $(LIBS)

sched_stack$(EXEEXT): $(sched_stack_OBJECTS) $(sched_stack_DEPENDENCIES) $(EXTRA_sched_stack_DEPENDENCIES) 
	@rm -f sched_stack$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_stack_OBJECTS) $(sched_stack_LDADD) $(LIBS)

sched_user_ws$(EXEEXT): $(sched_user_ws_OBJECTS) $(sched_user_ws_DEPENDENCIES) $(EXTRA_sched_user_ws_DEPENDENCIES) 
	@rm -f sched_user_ws$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sched_user_ws_OBJECTS) $(sched_user_ws_LDADD) $(LIBS)

self_rank_id$(EXEEXT): $(self_rank_id_OBJECTS) $(self_rank_id_DEPENDENCIES) $(EXTRA_self_rank_id_DEPENDENCIES) 
	@rm -f self_rank_id$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(self_rank_id_OBJECTS) $(self_rank_id_LDADD) $(LIBS)

self_type$(EXEEXT): $(self_type_OBJECTS) $(self_type_DEPENDENCIES) $(EXTRA_self_type_DEPENDENCIES) 
	@rm -f self_type$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(self_type_OBJECTS) $(self_type_LDADD) $(LIBS)

sync_no_contention$(EXEEXT): $(sync_no_contention_OBJECTS) $(sync_no_contention_DEPENDENCIES) $(EXTRA_sync_no_contention_DEPENDENCIES) 
	@rm -f sync_no_contention$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sync_no_contention_OBJECTS) $(sync_no_contention_LDADD) $(LIBS)

task_create$(EXEEXT): $(task_create_OBJECTS) $(task_create_DEPENDENCIES) $(EXTRA_task_create_DEPENDENCIES) 
	@rm -f task_create$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(task_create_OBJECTS) $(task_create_LDADD) $(LIBS)

task_create_on_xstream$(EXEEXT): $(task_create_on_xstream_OBJECTS) $(task_create_on_xstream_DEPENDENCIES) $(EXTRA_task_create_on_xstream_DEPENDENCIES) 
	@rm -f task_create_on_xstream$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(task_create_on_xstream_OBJECTS) $(task_create_on_xstream_LDADD) $(LIBS)

task_data$(EXEEXT): $(task_data_OBJECTS) $(task_data_DEPENDENCIES) $(EXTRA_task_data_DEPENDENCIES) 
	@rm -f task_data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(task_data_OBJECTS) $(task_data_LDADD) $(LIBS)

task_data2$(EXEEXT): $(task_data2_OBJECTS) $(task_data2_DEPENDENCIES) $(EXTRA_task_data2_DEPENDENCIES) 
	@rm -f task_data2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(task_data2_OBJECTS) $(task_data2_LDADD) $(LIBS)

task_revive$(EXEEXT): $(task_revive_OBJECTS) $(task_revive_DEPENDENCIES) $(EXTRA_task_revive_DEPENDENCIES) 
	@rm -f task_revive$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(task_revive_OBJECTS) $(task_revive_LDADD) $(LIBS)

thread_attr$(EXEEXT): $(thread_attr_OBJECTS) $(thread_attr_DEPENDENCIES) $(EXTRA_thread_attr_DEPENDENCIES) 
	@rm -f thread_attr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_attr_OBJECTS) $(thread_attr_LDADD) $(LIBS)

thread_attr2$(EXEEXT): $(thread_attr2_OBJECTS) $(thread_attr2_DEPENDENCIES) $(EXTRA_thread_attr2_DEPENDENCIES) 
	@rm -f thread_attr2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_attr2_OBJECTS) $(thread_attr2_LDADD) $(LIBS)

thread_create$(EXEEXT): $(thread_create_OBJECTS) $(thread_create_DEPENDENCIES) $(EXTRA_thread_create_DEPENDENCIES) 
	@rm -f thread_create$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_create_OBJECTS) $(thread_create_LDADD) $(LIBS)

thread_create2$(EXEEXT): $(thread_create2_OBJECTS) $(thread_create2_DEPENDENCIES) $(EXTRA_thread_create2_DEPENDENCIES) 
	@rm -f thread_create2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_create2_OBJECTS) $(thread_create2_LDADD) $(LIBS)

thread_create_on_xstream$(EXEEXT): $(thread_create_on_xstream_OBJECTS) $(thread_create_on_xstream_DEPENDENCIES) $(EXTRA_thread_create_on_xstream_DEPENDENCIES) 
	@rm -f thread_create_on_xstream$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_create_on_xstream_OBJECTS) $(thread_create_on_xstream_LDADD) $(LIBS)

thread_data$(EXEEXT): $(thread_data_OBJECTS) $(thread_data_DEPENDENCIES) $(EXTRA_thread_data_DEPENDENCIES) 
	@rm -f thread_data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_data_OBJECTS) $(thread_data_LDADD) $(LIBS)

thread_data2$(EXEEXT): $(thread_data2_OBJECTS) $(thread_data2_DEPENDENCIES) $(EXTRA_thread_data2_DEPENDENCIES) 
	@rm -f thread_data2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_data2_OBJECTS) $(thread_data2_LDADD) $(LIBS)

thread_exit$(EXEEXT): $(thread_exit_OBJECTS) $(thread_exit_DEPENDENCIES) $(EXTRA_thread_exit_DEPENDENCIES) 
	@rm -f thread_exit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_exit_OBJECTS) $(thread_exit_LDADD) $(LIBS)

thread_get_func_arg$(EXEEXT): $(thread_get_func_arg_OBJECTS) $(thread_get_func_arg_DEPENDENCIES) $(EXTRA_thread_get_func_arg_DEPENDENCIES) 
	@rm -f thread_get_func_arg$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_get_func_arg_OBJECTS) $(thread_get_func_arg_LDADD) $(LIBS)

thread_get_last_xstream$(EXEEXT): $(thread_get_last_xstream_OBJECTS) $(thread_get_last_xstream_DEPENDENCIES) $(EXTRA_thread_get_last_xstream_DEPENDENCIES) 
	@rm -f thread_get_last_xstream$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_get_last_xstream_OBJECTS) $(thread_get_last_xstream_LDADD) $(LIBS)

thread_id$(EXEEXT): $(thread_id_OBJECTS) $(thread_id_DEPENDENCIES) $(EXTRA_thread_id_DEPENDENCIES) 
	@rm -f thread_id$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_id_OBJECTS) $(thread_id_LDADD) $(LIBS)

thread_migrate$(EXEEXT): $(thread_migrate_OBJECTS) $(thread_migrate_DEPENDENCIES) $(EXTRA_thread_migrate_DEPENDENCIES) 
	@rm -f thread_migrate$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_migrate_OBJECTS) $(thread_migrate_LDADD) $(LIBS)

thread_revive$(EXEEXT): $(thread_revive_OBJECTS) $(thread_revive_DEPENDENCIES) $(EXTRA_thread_revive_DEPENDENCIES) 
	@rm -f thread_revive$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_revive_OBJECTS) $(thread_revive_LDADD) $(LIBS)

thread_self_suspend_resume$(EXEEXT): $(thread_self_suspend_resume_OBJECTS) $(thread_self_suspend_resume_DEPENDENCIES) $(EXTRA_thread_self_suspend_resume_DEPENDENCIES) 
	@rm -f thread_self_suspend_resume$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_self_suspend_resume_OBJECTS) $(thread_self_suspend_resume_LDADD) $(LIBS)

thread_task$(EXEEXT): $(thread_task_OBJECTS) $(thread_task_DEPENDENCIES) $(EXTRA_thread_task_DEPENDENCIES) 
	@rm -f thread_task$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_task_OBJECTS) $(thread_task_LDADD) $(LIBS)

thread_task_arg$(EXEEXT): $(thread_task_arg_OBJECTS) $(thread_task_arg_DEPENDENCIES) $(EXTRA_thread_task_arg_DEPENDENCIES) 
	@rm -f thread_task_arg$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_task_arg_OBJECTS) $(thread_task_arg_LDADD) $(LIBS)

thread_task_num$(EXEEXT): $(thread_task_num_OBJECTS) $(thread_task_num_DEPENDENCIES) $(EXTRA_thread_task_num_DEPENDENCIES) 
	@rm -f thread_task_num$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_task_num_OBJECTS) $(thread_task_num_LDADD) $(LIBS)

thread_yield$(EXEEXT): $(thread_yield_OBJECTS) $(thread_yield_DEPENDENCIES) $(EXTRA_thread_yield_DEPENDENCIES) 
	@rm -f thread_yield$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_yield_OBJECTS) $(thread_yield_LDADD) $(LIBS)

thread_yield2$(EXEEXT): $(thread_yield2_OBJECTS) $(thread_yield2_DEPENDENCIES) $(EXTRA_thread_yield2_DEPENDENCIES) 
	@rm -f thread_yield2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_yield2_OBJECTS) $(thread_yield2_LDADD) $(LIBS)

thread_yield_to$(EXEEXT): $(thread_yield_to_OBJECTS) $(thread_yield_to_DEPENDENCIES) $(EXTRA_thread_yield_to_DEPENDENCIES) 
	@rm -f thread_yield_to$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_yield_to_OBJECTS) $(thread_yield_to_LDADD) $(LIBS)

timer$(EXEEXT): $(timer_OBJECTS) $(timer_DEPENDENCIES) $(EXTRA_timer_DEPENDENCIES) 
	@rm -f timer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(timer_OBJECTS) $(timer_LDADD) $(LIBS)

unit$(EXEEXT): $(unit_OBJECTS) $(unit_DEPENDENCIES) $(EXTRA_unit_DEPENDENCIES) 
	@rm -f unit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(unit_OBJECTS) $(unit_LDADD) $(LIBS)

xstream_affinity$(EXEEXT): $(xstream_affinity_OBJECTS) $(xstream_affinity_DEPENDENCIES) $(EXTRA_xstream_affinity_DEPENDENCIES) 
	@rm -f xstream_affinity$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(xstream_affinity_OBJECTS) $(xstream_affinity_LDADD) $(LIBS)

xstream_barrier$(EXEEXT): $(xstream_barrier_OBJECTS) $(xstream_barrier_DEPENDENCIES) $(EXTRA_xstream_barrier_DEPENDENCIES) 
	@rm -f xstream_barrier$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(xstream_barrier_OBJECTS) $(xstream_barrier_LDADD) $(LIBS)

xstream_create$(EXEEXT): $(xstream_create_OBJECTS) $(xstream_create_DEPENDENCIES) $(EXTRA_xstream_create_DEPENDENCIES) 
	@rm -f xstream_create$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(xstream_create_OBJECTS) $(xstream_create_LDADD) $(LIBS)

xstream_rank$(EXEEXT): $(xstream_rank_OBJECTS) $(xstream_rank_DEPENDENCIES) $(EXTRA_xstream_rank_DEPENDENCIES) 
	@rm -f xstream_rank$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(xstream_rank_OBJECTS) $(xstream_rank_LDADD) $(LIBS)

xstream_revive$(EXEEXT): $(xstream_revive_OBJECTS) $(xstream_revive_DEPENDENCIES) $(EXTRA_xstream_revive_DEPENDENCIES) 
	@rm -f xstream_revive$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(xstream_revive_OBJECTS) $(xstream_revive_LDADD) $(LIBS)

xstream_set_main_sched$(EXEEXT): $(xstream_set_main_sched_OBJECTS) $(xstream_set_main_sched_DEPENDENCIES) $(EXTRA_xstream_set_main_sched_DEPENDENCIES) 
	@rm -f xstream_set_main_sched$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(xstream_set_main_sched_OBJECTS) $(xstream_set_main_sched_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/barrier.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cond_join.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cond_signal_in_main.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cond_static.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cond_test.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cond_timedwait.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/error.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eventual_create.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eventual_test.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ext_thread.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ext_thread2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ext_thread_barrier.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ext_thread_cond.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ext_thread_eventual.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ext_thread_future.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ext_thread_join.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ext_thread_mutex.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ext_thread_rwlock.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/future_create.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/info_print.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/info_print_stack.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/info_stackdump.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/info_stackdump2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/init_finalize.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main_sched.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mutex.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mutex_prio.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mutex_recursive.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mutex_spinlock.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mutex_static.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mutex_unlock_se.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pool_custom.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rwlock_reader_incl.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rwlock_reader_writer_excl.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rwlock_writer_excl.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sched_basic.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sched_basic_wait.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sched_config.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sched_on_thread.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sched_prio.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sched_randws.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sched_set_main.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sched_stack.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sched_user_ws.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/self_rank_id.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/self_type.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sync_no_contention.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/task_create.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/task_create_on_xstream.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/task_data.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/task_data2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/task_revive.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_attr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_attr2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_create.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_create2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_create_on_xstream.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_data.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_data2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_exit.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_get_func_arg.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_get_last_xstream.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_id.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_migrate.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_revive.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_self_suspend_resume.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_task.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_task_arg.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_task_num.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_yield.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_yield2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thread_yield_to.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unit.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xstream_affinity.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xstream_barrier.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xstream_create.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xstream_rank.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xstream_revive.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xstream_set_main_sched.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
init_finalize.log: init_finalize$(EXEEXT)
	@p='init_finalize$(EXEEXT)'; \
	b='init_finalize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
xstream_create.log: xstream_create$(EXEEXT)
	@p='xstream_create$(EXEEXT)'; \
	b='xstream_create'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
xstream_revive.log: xstream_revive$(EXEEXT)
	@p='xstream_revive$(EXEEXT)'; \
	b='xstream_revive'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
xstream_affinity.log: xstream_affinity$(EXEEXT)
	@p='xstream_affinity$(EXEEXT)'; \
	b='xstream_affinity'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
xstream_barrier.log: xstream_barrier$(EXEEXT)
	@p='xstream_barrier$(EXEEXT)'; \
	b='xstream_barrier'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
xstream_rank.log: xstream_rank$(EXEEXT)
	@p='xstream_rank$(EXEEXT)'; \
	b='xstream_rank'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
xstream_set_main_sched.log: xstream_set_main_sched$(EXEEXT)
	@p='xstream_set_main_sched$(EXEEXT)'; \
	b='xstream_set_main_sched'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_create.log: thread_create$(EXEEXT)
	@p='thread_create$(EXEEXT)'; \
	b='thread_create'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_create2.log: thread_create2$(EXEEXT)
	@p='thread_create2$(EXEEXT)'; \
	b='thread_create2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_create_on_xstream.log: thread_create_on_xstream$(EXEEXT)
	@p='thread_create_on_xstream$(EXEEXT)'; \
	b='thread_create_on_xstream'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_revive.log: thread_revive$(EXEEXT)
	@p='thread_revive$(EXEEXT)'; \
	b='thread_revive'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_attr.log: thread_attr$(EXEEXT)
	@p='thread_attr$(EXEEXT)'; \
	b='thread_attr'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_attr2.log: thread_attr2$(EXEEXT)
	@p='thread_attr2$(EXEEXT)'; \
	b='thread_attr2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_yield.log: thread_yield$(EXEEXT)
	@p='thread_yield$(EXEEXT)'; \
	b='thread_yield'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_yield2.log: thread_yield2$(EXEEXT)
	@p='thread_yield2$(EXEEXT)'; \
	b='thread_yield2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_yield_to.log: thread_yield_to$(EXEEXT)
	@p='thread_yield_to$(EXEEXT)'; \
	b='thread_yield_to'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_exit.log: thread_exit$(EXEEXT)
	@p='thread_exit$(EXEEXT)'; \
	b='thread_exit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_self_suspend_resume.log: thread_self_suspend_resume$(EXEEXT)
	@p='thread_self_suspend_resume$(EXEEXT)'; \
	b='thread_self_suspend_resume'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_get_last_xstream.log: thread_get_last_xstream$(EXEEXT)
	@p='thread_get_last_xstream$(EXEEXT)'; \
	b='thread_get_last_xstream'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_get_func_arg.log: thread_get_func_arg$(EXEEXT)
	@p='thread_get_func_arg$(EXEEXT)'; \
	b='thread_get_func_arg'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_migrate.log: thread_migrate$(EXEEXT)
	@p='thread_migrate$(EXEEXT)'; \
	b='thread_migrate'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_data.log: thread_data$(EXEEXT)
	@p='thread_data$(EXEEXT)'; \
	b='thread_data'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_data2.log: thread_data2$(EXEEXT)
	@p='thread_data2$(EXEEXT)'; \
	b='thread_data2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_id.log: thread_id$(EXEEXT)
	@p='thread_id$(EXEEXT)'; \
	b='thread_id'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
task_create.log: task_create$(EXEEXT)
	@p='task_create$(EXEEXT)'; \
	b='task_create'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
task_create_on_xstream.log: task_create_on_xstream$(EXEEXT)
	@p='task_create_on_xstream$(EXEEXT)'; \
	b='task_create_on_xstream'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
task_revive.log: task_revive$(EXEEXT)
	@p='task_revive$(EXEEXT)'; \
	b='task_revive'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
task_data.log: task_data$(EXEEXT)
	@p='task_data$(EXEEXT)'; \
	b='task_data'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
task_data2.log: task_data2$(EXEEXT)
	@p='task_data2$(EXEEXT)'; \
	b='task_data2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_task.log: thread_task$(EXEEXT)
	@p='thread_task$(EXEEXT)'; \
	b='thread_task'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_task_arg.log: thread_task_arg$(EXEEXT)
	@p='thread_task_arg$(EXEEXT)'; \
	b='thread_task_arg'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_task_num.log: thread_task_num$(EXEEXT)
	@p='thread_task_num$(EXEEXT)'; \
	b='thread_task_num'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_basic.log: sched_basic$(EXEEXT)
	@p='sched_basic$(EXEEXT)'; \
	b='sched_basic'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_basic_wait.log: sched_basic_wait$(EXEEXT)
	@p='sched_basic_wait$(EXEEXT)'; \
	b='sched_basic_wait'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_on_thread.log: sched_on_thread$(EXEEXT)
	@p='sched_on_thread$(EXEEXT)'; \
	b='sched_on_thread'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_prio.log: sched_prio$(EXEEXT)
	@p='sched_prio$(EXEEXT)'; \
	b='sched_prio'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_randws.log: sched_randws$(EXEEXT)
	@p='sched_randws$(EXEEXT)'; \
	b='sched_randws'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_set_main.log: sched_set_main$(EXEEXT)
	@p='sched_set_main$(EXEEXT)'; \
	b='sched_set_main'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_stack.log: sched_stack$(EXEEXT)
	@p='sched_stack$(EXEEXT)'; \
	b='sched_stack'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_config.log: sched_config$(EXEEXT)
	@p='sched_config$(EXEEXT)'; \
	b='sched_config'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sched_user_ws.log: sched_user_ws$(EXEEXT)
	@p='sched_user_ws$(EXEEXT)'; \
	b='sched_user_ws'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pool_custom.log: pool_custom$(EXEEXT)
	@p='pool_custom$(EXEEXT)'; \
	b='pool_custom'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sync_no_contention.log: sync_no_contention$(EXEEXT)
	@p='sync_no_contention$(EXEEXT)'; \
	b='sync_no_contention'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
main_sched.log: main_sched$(EXEEXT)
	@p='main_sched$(EXEEXT)'; \
	b='main_sched'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mutex.log: mutex$(EXEEXT)
	@p='mutex$(EXEEXT)'; \
	b='mutex'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mutex_prio.log: mutex_prio$(EXEEXT)
	@p='mutex_prio$(EXEEXT)'; \
	b='mutex_prio'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mutex_recursive.log: mutex_recursive$(EXEEXT)
	@p='mutex_recursive$(EXEEXT)'; \
	b='mutex_recursive'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mutex_spinlock.log: mutex_spinlock$(EXEEXT)
	@p='mutex_spinlock$(EXEEXT)'; \
	b='mutex_spinlock'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mutex_static.log: mutex_static$(EXEEXT)
	@p='mutex_static$(EXEEXT)'; \
	b='mutex_static'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mutex_unlock_se.log: mutex_unlock_se$(EXEEXT)
	@p='mutex_unlock_se$(EXEEXT)'; \
	b='mutex_unlock_se'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cond_test.log: cond_test$(EXEEXT)
	@p='cond_test$(EXEEXT)'; \
	b='cond_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cond_join.log: cond_join$(EXEEXT)
	@p='cond_join$(EXEEXT)'; \
	b='cond_join'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cond_signal_in_main.log: cond_signal_in_main$(EXEEXT)
	@p='cond_signal_in_main$(EXEEXT)'; \
	b='cond_signal_in_main'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cond_static.log: cond_static$(EXEEXT)
	@p='cond_static$(EXEEXT)'; \
	b='cond_static'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cond_timedwait.log: cond_timedwait$(EXEEXT)
	@p='cond_timedwait$(EXEEXT)'; \
	b='cond_timedwait'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rwlock_writer_excl.log: rwlock_writer_excl$(EXEEXT)
	@p='rwlock_writer_excl$(EXEEXT)'; \
	b='rwlock_writer_excl'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rwlock_reader_writer_excl.log: rwlock_reader_writer_excl$(EXEEXT)
	@p='rwlock_reader_writer_excl$(EXEEXT)'; \
	b='rwlock_reader_writer_excl'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rwlock_reader_incl.log: rwlock_reader_incl$(EXEEXT)
	@p='rwlock_reader_incl$(EXEEXT)'; \
	b='rwlock_reader_incl'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
future_create.log: future_create$(EXEEXT)
	@p='future_create$(EXEEXT)'; \
	b='future_create'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
eventual_create.log: eventual_create$(EXEEXT)
	@p='eventual_create$(EXEEXT)'; \
	b='eventual_create'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
eventual_test.log: eventual_test$(EXEEXT)
	@p='eventual_test$(EXEEXT)'; \
	b='eventual_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
barrier.log: barrier$(EXEEXT)
	@p='barrier$(EXEEXT)'; \
	b='barrier'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
self_rank_id.log: self_rank_id$(EXEEXT)
	@p='self_rank_id$(EXEEXT)'; \
	b='self_rank_id'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
self_type.log: self_type$(EXEEXT)
	@p='self_type$(EXEEXT)'; \
	b='self_type'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ext_thread.log: ext_thread$(EXEEXT)
	@p='ext_thread$(EXEEXT)'; \
	b='ext_thread'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ext_thread2.log: ext_thread2$(EXEEXT)
	@p='ext_thread2$(EXEEXT)'; \
	b='ext_thread2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ext_thread_barrier.log: ext_thread_barrier$(EXEEXT)
	@p='ext_thread_barrier$(EXEEXT)'; \
	b='ext_thread_barrier'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ext_thread_cond.log: ext_thread_cond$(EXEEXT)
	@p='ext_thread_cond$(EXEEXT)'; \
	b='ext_thread_cond'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ext_thread_eventual.log: ext_thread_eventual$(EXEEXT)
	@p='ext_thread_eventual$(EXEEXT)'; \
	b='ext_thread_eventual'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ext_thread_future.log: ext_thread_future$(EXEEXT)
	@p='ext_thread_future$(EXEEXT)'; \
	b='ext_thread_future'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ext_thread_join.log: ext_thread_join$(EXEEXT)
	@p='ext_thread_join$(EXEEXT)'; \
	b='ext_thread_join'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ext_thread_mutex.log: ext_thread_mutex$(EXEEXT)
	@p='ext_thread_mutex$(EXEEXT)'; \
	b='ext_thread_mutex'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ext_thread_rwlock.log: ext_thread_rwlock$(EXEEXT)
	@p='ext_thread_rwlock$(EXEEXT)'; \
	b='ext_thread_rwlock'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
timer.log: timer$(EXEEXT)
	@p='timer$(EXEEXT)'; \
	b='timer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
info_print.log: info_print$(EXEEXT)
	@p='info_print$(EXEEXT)'; \
	b='info_print'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
info_print_stack.log: info_print_stack$(EXEEXT)
	@p='info_print_stack$(EXEEXT)'; \
	b='info_print_stack'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
info_stackdump.log: info_stackdump$(EXEEXT)
	@p='info_stackdump$(EXEEXT)'; \
	b='info_stackdump'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
info_stackdump2.log: info_stackdump2$(EXEEXT)
	@p='info_stackdump2$(EXEEXT)'; \
	b='info_stackdump2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
unit.log: unit$(EXEEXT)
	@p='unit$(EXEEXT)'; \
	b='unit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
error.log: error$(EXEEXT)
	@p='error$(EXEEXT)'; \
	b='error'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/barrier.Po
	-rm -f ./$(DEPDIR)/cond_join.Po
	-rm -f ./$(DEPDIR)/cond_signal_in_main.Po
	-rm -f ./$(DEPDIR)/cond_static.Po
	-rm -f ./$(DEPDIR)/cond_test.Po
	-rm -f ./$(DEPDIR)/cond_timedwait.Po
	-rm -f ./$(DEPDIR)/error.Po
	-rm -f ./$(DEPDIR)/eventual_create.Po
	-rm -f ./$(DEPDIR)/eventual_test.Po
	-rm -f ./$(DEPDIR)/ext_thread.Po
	-rm -f ./$(DEPDIR)/ext_thread2.Po
	-rm -f ./$(DEPDIR)/ext_thread_barrier.Po
	-rm -f ./$(DEPDIR)/ext_thread_cond.Po
	-rm -f ./$(DEPDIR)/ext_thread_eventual.Po
	-rm -f ./$(DEPDIR)/ext_thread_future.Po
	-rm -f ./$(DEPDIR)/ext_thread_join.Po
	-rm -f ./$(DEPDIR)/ext_thread_mutex.Po
	-rm -f ./$(DEPDIR)/ext_thread_rwlock.Po
	-rm -f ./$(DEPDIR)/future_create.Po
	-rm -f ./$(DEPDIR)/info_print.Po
	-rm -f ./$(DEPDIR)/info_print_stack.Po
	-rm -f ./$(DEPDIR)/info_stackdump.Po
	-rm -f ./$(DEPDIR)/info_stackdump2.Po
	-rm -f ./$(DEPDIR)/init_finalize.Po
	-rm -f ./$(DEPDIR)/main_sched.Po
	-rm -f ./$(DEPDIR)/mutex.Po
	-rm -f ./$(DEPDIR)/mutex_prio.Po
	-rm -f ./$(DEPDIR)/mutex_recursive.Po
	-rm -f ./$(DEPDIR)/mutex_spinlock.Po
	-rm -f ./$(DEPDIR)/mutex_static.Po
	-rm -f ./$(DEPDIR)/mutex_unlock_se.Po
	-rm -f ./$(DEPDIR)/pool_custom.Po
	-rm -f ./$(DEPDIR)/rwlock_reader_incl.Po
	-rm -f ./$(DEPDIR)/rwlock_reader_writer_excl.Po
	-rm -f ./$(DEPDIR)/rwlock_writer_excl.Po
	-rm -f ./$(DEPDIR)/sched_basic.Po
	-rm -f ./$(DEPDIR)/sched_basic_wait.Po
	-rm -f ./$(DEPDIR)/sched_config.Po
	-rm -f ./$(DEPDIR)/sched_on_thread.Po
	-rm -f ./$(DEPDIR)/sched_prio.Po
	-rm -f ./$(DEPDIR)/sched_randws.Po
	-rm -f ./$(DEPDIR)/sched_set_main.Po
	-rm -f ./$(DEPDIR)/sched_stack.Po
	-rm -f ./$(DEPDIR)/sched_user_ws.Po
	-rm -f ./$(DEPDIR)/self_rank_id.Po
	-rm -f ./$(DEPDIR)/self_type.Po
	-rm -f ./$(DEPDIR)/sync_no_contention.Po
	-rm -f ./$(DEPDIR)/task_create.Po
	-rm -f ./$(DEPDIR)/task_create_on_xstream.Po
	-rm -f ./$(DEPDIR)/task_data.Po
	-rm -f ./$(DEPDIR)/task_data2.Po
	-rm -f ./$(DEPDIR)/task_revive.Po
	-rm -f ./$(DEPDIR)/thread_attr.Po
	-rm -f ./$(DEPDIR)/thread_attr2.Po
	-rm -f ./$(DEPDIR)/thread_create.Po
	-rm -f ./$(DEPDIR)/thread_create2.Po
	-rm -f ./$(DEPDIR)/thread_create_on_xstream.Po
	-rm -f ./$(DEPDIR)/thread_data.Po
	-rm -f ./$(DEPDIR)/thread_data2.Po
	-rm -f ./$(DEPDIR)/thread_exit.Po
	-rm -f ./$(DEPDIR)/thread_get_func_arg.Po
	-rm -f ./$(DEPDIR)/thread_get_last_xstream.Po
	-rm -f ./$(DEPDIR)/thread_id.Po
	-rm -f ./$(DEPDIR)/thread_migrate.Po
	-rm -f ./$(DEPDIR)/thread_revive.Po
	-rm -f ./$(DEPDIR)/thread_self_suspend_resume.Po
	-rm -f ./$(DEPDIR)/thread_task.Po
	-rm -f ./$(DEPDIR)/thread_task_arg.Po
	-rm -f ./$(DEPDIR)/thread_task_num.Po
	-rm -f ./$(DEPDIR)/thread_yield.Po
	-rm -f ./$(DEPDIR)/thread_yield2.Po
	-rm -f ./$(DEPDIR)/thread_yield_to.Po
	-rm -f ./$(DEPDIR)/timer.Po
	-rm -f ./$(DEPDIR)/unit.Po
	-rm -f ./$(DEPDIR)/xstream_affinity.Po
	-rm -f ./$(DEPDIR)/xstream_barrier.Po
	-rm -f ./$(DEPDIR)/xstream_create.Po
	-rm -f ./$(DEPDIR)/xstream_rank.Po
	-rm -f ./$(DEPDIR)/xstream_revive.Po
	-rm -f ./$(DEPDIR)/xstream_set_main_sched.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/barrier.Po
	-rm -f ./$(DEPDIR)/cond_join.Po
	-rm -f ./$(DEPDIR)/cond_signal_in_main.Po
	-rm -f ./$(DEPDIR)/cond_static.Po
	-rm -f ./$(DEPDIR)/cond_test.Po
	-rm -f ./$(DEPDIR)/cond_timedwait.Po
	-rm -f ./$(DEPDIR)/error.Po
	-rm -f ./$(DEPDIR)/eventual_create.Po
	-rm -f ./$(DEPDIR)/eventual_test.Po
	-rm -f ./$(DEPDIR)/ext_thread.Po
	-rm -f ./$(DEPDIR)/ext_thread2.Po
	-rm -f ./$(DEPDIR)/ext_thread_barrier.Po
	-rm -f ./$(DEPDIR)/ext_thread_cond.Po
	-rm -f ./$(DEPDIR)/ext_thread_eventual.Po
	-rm -f ./$(DEPDIR)/ext_thread_future.Po
	-rm -f ./$(DEPDIR)/ext_thread_join.Po
	-rm -f ./$(DEPDIR)/ext_thread_mutex.Po
	-rm -f ./$(DEPDIR)/ext_thread_rwlock.Po
	-rm -f ./$(DEPDIR)/future_create.Po
	-rm -f ./$(DEPDIR)/info_print.Po
	-rm -f ./$(DEPDIR)/info_print_stack.Po
	-rm -f ./$(DEPDIR)/info_stackdump.Po
	-rm -f ./$(DEPDIR)/info_stackdump2.Po
	-rm -f ./$(DEPDIR)/init_finalize.Po
	-rm -f ./$(DEPDIR)/main_sched.Po
	-rm -f ./$(DEPDIR)/mutex.Po
	-rm -f ./$(DEPDIR)/mutex_prio.Po
	-rm -f ./$(DEPDIR)/mutex_recursive.Po
	-rm -f ./$(DEPDIR)/mutex_spinlock.Po
	-rm -f ./$(DEPDIR)/mutex_static.Po
	-rm -f ./$(DEPDIR)/mutex_unlock_se.Po
	-rm -f ./$(DEPDIR)/pool_custom.Po
	-rm -f ./$(DEPDIR)/rwlock_reader_incl.Po
	-rm -f ./$(DEPDIR)/rwlock_reader_writer_excl.Po
	-rm -f ./$(DEPDIR)/rwlock_writer_excl.Po
	-rm -f ./$(DEPDIR)/sched_basic.Po
	-rm -f ./$(DEPDIR)/sched_basic_wait.Po
	-rm -f ./$(DEPDIR)/sched_config.Po
	-rm -f ./$(DEPDIR)/sched_on_thread.Po
	-rm -f ./$(DEPDIR)/sched_prio.Po
	-rm -f ./$(DEPDIR)/sched_randws.Po
	-rm -f ./$(DEPDIR)/sched_set_main.Po
	-rm -f ./$(DEPDIR)/sched_stack.Po
	-rm -f ./$(DEPDIR)/sched_user_ws.Po
	-rm -f ./$(DEPDIR)/self_rank_id.Po
	-rm -f ./$(DEPDIR)/self_type.Po
	-rm -f ./$(DEPDIR)/sync_no_contention.Po
	-rm -f ./$(DEPDIR)/task_create.Po
	-rm -f ./$(DEPDIR)/task_create_on_xstream.Po
	-rm -f ./$(DEPDIR)/task_data.Po
	-rm -f ./$(DEPDIR)/task_data2.Po
	-rm -f ./$(DEPDIR)/task_revive.Po
	-rm -f ./$(DEPDIR)/thread_attr.Po
	-rm -f ./$(DEPDIR)/thread_attr2.Po
	-rm -f ./$(DEPDIR)/thread_create.Po
	-rm -f ./$(DEPDIR)/thread_create2.Po
	-rm -f ./$(DEPDIR)/thread_create_on_xstream.Po
	-rm -f ./$(DEPDIR)/thread_data.Po
	-rm -f ./$(DEPDIR)/thread_data2.Po
	-rm -f ./$(DEPDIR)/thread_exit.Po
	-rm -f ./$(DEPDIR)/thread_get_func_arg.Po
	-rm -f ./$(DEPDIR)/thread_get_last_xstream.Po
	-rm -f ./$(DEPDIR)/thread_id.Po
	-rm -f ./$(DEPDIR)/thread_migrate.Po
	-rm -f ./$(DEPDIR)/thread_revive.Po
	-rm -f ./$(DEPDIR)/thread_self_suspend_resume.Po
	-rm -f ./$(DEPDIR)/thread_task.Po
	-rm -f ./$(DEPDIR)/thread_task_arg.Po
	-rm -f ./$(DEPDIR)/thread_task_num.Po
	-rm -f ./$(DEPDIR)/thread_yield.Po
	-rm -f ./$(DEPDIR)/thread_yield2.Po
	-rm -f ./$(DEPDIR)/thread_yield_to.Po
	-rm -f ./$(DEPDIR)/timer.Po
	-rm -f ./$(DEPDIR)/unit.Po
	-rm -f ./$(DEPDIR)/xstream_affinity.Po
	-rm -f ./$(DEPDIR)/xstream_barrier.Po
	-rm -f ./$(DEPDIR)/xstream_create.Po
	-rm -f ./$(DEPDIR)/xstream_rank.Po
	-rm -f ./$(DEPDIR)/xstream_revive.Po
	-rm -f ./$(DEPDIR)/xstream_set_main_sched.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am

.PRECIOUS: Makefile


$(libabt):
	$(MAKE) -C $(top_builddir)/src

$(libutil):
	$(MAKE) -C $(top_builddir)/test/util

testing:
	./init_finalize
	./xstream_create
	./xstream_revive
	./xstream_affinity
	./xstream_barrier
	./xstream_rank
	./xstream_set_main_sched
	./thread_create
	./thread_create2
	./thread_create_on_xstream
	./thread_revive
	./thread_attr
	./thread_attr2
	./thread_yield
	./thread_yield2
	./thread_yield_to
	./thread_exit
	./thread_self_suspend_resume
	./thread_get_last_xstream
	./thread_get_func_arg
	./thread_migrate
	./thread_data
	./thread_data2
	./thread_id
	./task_create
	./task_create_on_xstream
	./task_revive
	./task_data
	./task_data2
	./thread_task
	./thread_task_arg
	./thread_task_num
	./sched_basic
	./sched_basic_wait
	./sched_on_thread
	./sched_prio
	./sched_randws
	./sched_set_main
	./sched_stack
	./sched_config
	./sched_user_ws
	./pool_custom
	./sync_no_contention
	./main_sched
	./mutex
	./mutex_prio
	./mutex_recursive
	./mutex_spinlock
	./mutex_static
	./mutex_unlock_se
	./cond_test
	./cond_join
	./cond_signal_in_main
	./cond_static
	./cond_timedwait
	./rwlock_writer_excl
	./rwlock_reader_writer_excl
	./rwlock_reader_incl
	./future_create
	./eventual_create
	./eventual_test
	./barrier
	./self_rank_id
	./self_type
	./ext_thread
	./ext_thread2
	./ext_thread_barrier
	./ext_thread_cond
	./ext_thread_eventual
	./ext_thread_future
	./ext_thread_join
	./ext_thread_mutex
	./ext_thread_rwlock
	./timer
	./info_print
	./info_print_stack
	./info_stackdump
	./info_stackdump2
	./unit
	./error

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
